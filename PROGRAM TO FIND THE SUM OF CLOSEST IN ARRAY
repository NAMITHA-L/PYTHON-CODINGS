class Solution:
    def sumClosest(self, arr, target):
        # Edge case: If array has less than 2 elements, return empty list
        if len(arr) < 2:
            return []
        
        # Sort the array
        arr.sort()
        n = len(arr)
        
        # Initialize pointers and variables
        left, right = 0, n - 1
        min_diff = float('inf')
        res = []  # Initialize res properly
        
        # Two-pointer approach
        while left < right:
            curr_sum = arr[left] + arr[right]
            diff = abs(target - curr_sum)
            
            # Update result if a closer sum is found
            if diff < min_diff:
                min_diff = diff
                res = [arr[left], arr[right]]
            
            # Move pointers
            if curr_sum < target:
                left += 1
            elif curr_sum > target:
                right -= 1
            else:
                return res  # Exact match found
        
        return res  # Ensure res is always returned
