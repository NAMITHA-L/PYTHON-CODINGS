def safe(board,row,col,n):
    for i in range (col):
     if board[row][i]== 1:
         return False
    for i,j in zip(range(row,-1,-1),range(col,-1,-1)):
        if board[i][j]==1:
            return False
    for i,j in zip(range(row,n,-1),range(col,-1,-1)):
        if board [i][j]==1:
            return False
    return True
def solvenqn(board,col,n):
    if col>=n:
     return True
    for i in range(n):
        if safe(board,i,col,n):
            board [i][col]=1
            if solvenqn(board,col+1,n):
                return True
            board [i] [col] =0
    return False
def prints(board,n):
    for i in range (n):
        for j in range (n):
            if board[i][j]==1:
                print("Q",end=" ")
            else:
                print(".",end=" ")
           
    print()
n=4
board=[[0 for _ in range (n)] for _ in range (n)]
if solvenqn(board,0,n):
    prints(board,n)
else:
    print("no solution")
